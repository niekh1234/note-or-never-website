{
  "notes": [
    {
      "id": "homepage",
      "title": "Welcome to Note or Never",
      "content": "# Welcome to <span style=\"color: #C026D3\">note or never</span>\n\n### A simple self-hosted note taking app.\n\n<br>\n\n<p>\n  <a href=\"/install\" class=\"btn-primary\" style=\"text-decoration: none; display: inline-block; margin-bottom: 0.6rem;\">Installation</a>\n  <a href=\"https://github.com/niekh1234/note-or-never/issues/\" class=\"btn-secondary\" style=\"text-decoration: none; display: inline-block; margin-bottom: 0.6rem; white-space: nowrap\">Github repo</a>\n  <a href=\"https://github.com/niekh1234/note-or-never/issues/\" class=\"btn-secondary\" style=\"text-decoration: none; display: inline-block; margin-bottom: 0.6rem;\">Issues</a>\n</p>\n\n## :bulb: Philosphy\nAfter spending a couple hours searching for a good `self-hosted` note taking specifically made for `markdown` I found myself not being satisfied by the available solutions.\n\n### :pencil: Existing solutions are either.\n- Way too complex.\n- Not good for self hosting.\n- Outdated and slow.\n\nHow hard can it be? Why can I not type some markdown on multiple devices?\n\n### :question: Why can't I\n\n1. Write markdown in an editor.\n2. Magically - most importantly quickly - get a preview rendered.\n3. Open my phone and edit the exact same note?\n4. Have it all feel like a native experience.\n\n<!-- Features -->\n\n## :dart: Features\n\n- Completely self-hostable, write a note on your pc and continue on your phone.\n- Fast markdown parsing using `WASM` and a web worker.\n- Modern, clean and response UI using `React`, `TailwindCSS` and `Headless UI`.\n- Username-password authentication.\n- Great code editing and syntax highlighting using `CodeMirror`\n- `PWA`-like experience using background syncing and preemtive updating.\n- Fast by design, everything is stored in memory. **But that means it cannot handle thousands of records in its current state.**\n\n### For developers, by developers\n\nReally, your feedback is the most valuable thing. Please head over to the [github](https://github.com/niekh1234/note-or-never) repo with your ideas.\n\n## :space_invader: Tech Stack\n\n<details>\n  <summary>Client</summary>\n  <ul>\n    <li><a href=\"https://www.typescriptlang.org/\">Typescript</a></li>\n    <li><a href=\"https://nextjs.org/\">Next.js</a></li>\n    <li><a href=\"https://reactjs.org/\">React.js</a></li>\n    <li><a href=\"https://tailwindcss.com/\">TailwindCSS</a></li>\n  </ul>\n</details>\n\n<details>\n  <summary>Server</summary>\n  <ul>\n    <li><a href=\"https://www.typescriptlang.org/\">Typescript</a></li>\n    <li><a href=\"https://nextjs.org/\">Next.js api routes</a></li>\n    <li><a href=\"https://www.prisma.io/\">Prisma</a></li>    \n  </ul>\n</details>\n\n<details>\n<summary>Database</summary>\n  <ul>\n    <li><a href=\"https://www.postgresql.org/\">PostgreSQL</a></li>\n  </ul>\n</details>\n\n## :zap: Instant preview, really?\n\nSince we use `wasm` and `rust`, markdown parsing is fast. And that was the main reason this application was written.\n\nBut since every keystroke parses and re-renders the entire note, the more you write the harder it gets to parse, more work needs to be done.\nUsing `wasm` makes the whole thing a lot faster than just using `js`, but the architecture is still flawed by design, why re-render the entire thing?\n\n### So what then?\n\nIf you think about it, why would a single keystroke need to re-render the entire note?\nCan't we just target the current line? Probably, that is something for our [roadmap](/roadmap). But is would be quite complex, so let's not get ahead of ourselves.\n\nThere is probably an issue with this idea though, what about multi-line elements like `tables`?.\n\n\n\n",
      "createdAt": "2022-05-24T18:20:35.534Z",
      "updatedAt": "2022-05-24T18:20:35.534Z",
      "view": "P"
    },
    {
      "id": "prerequisites",
      "title": "Prerequisites",
      "content": "# Prerequisites\n\n<blockquote style=\"border-color: #DC2626;\">As this project is still in its infancy some installation problems are to be expected.<br><br><b>Please be patient and  please do let us know if you run into issues during your installation.</b></blockquote>\n\n**Note or never** is intended to be hosted in some form of `Linux` environment and is currently only tested on `Debian` based distributions, in theory it should work on any similar platform or distribution if the dependencies are met. \n\n| Platform       | Status             |\n| -----------    | ------------------ |\n| Linux (debian) | Tested and Working |\n| Linux (arch)   | Untested           |\n| Linux (fedora) | Untested           |\n| Windows        | Untested           |\n| MacOS          | Untested           |\n\nOnly tested on an x86 architecture.\n\n## Dependencies\n\n### Required\n\n| Dependency                        | Version            |\n| --------------------------------- | -------------------|\n| [Node](https://nodejs.org/en/)    | ^16.13.1           |\n| [Yarn](https://yarnpkg.com/)      | ^1.22.17           |\n| [PM2](https://pm2.keymetrics.io/) | ^5.2.0             |\n\n### Choose yourself\n\n- [Docker](https://www.docker.com/) and [docker-compose](https://docs.docker.com/compose/) can be used to launch a **Postgres database** provided by the repository. \n- You can set up a `reverse-proxy` using something like `nginx` or `apache`, in the getting started guide we will use `nginx`.\n\n## Hosting\n\nUse your favourite cloud provider, I like [Hetzner](https://www.hetzner.com/cloud).\n\n<i style=\"opacity: 0.5\">are you a cloud provider? maybe consider sponsoring the project and we'll name you!</i>\n\n### Minimum hardware requirements\n\nNote or never is pretty light, the following will suffice:\n\n- 1 (virtual) CPU core\n- 1 GB of RAM\n\n### Next:\n\n<a href=\"/install\" class=\"btn-secondary\" style=\"text-decoration: none;\">Install guide</a>\n",
      "createdAt": "2022-05-24T18:20:34.534Z",
      "updatedAt": "2022-05-24T18:20:34.534Z",
      "view": "P"
    },
    {
      "id": "install",
      "title": "Installation",
      "content": "# Installation\n\n<blockquote style=\"border-color: #DC2626;\">As this project is still in its infancy some installation problems are to be expected.<br><br><b>Please be patient and  please do let us know if you run into issues during your installation.</b></blockquote>\n\n### Welcome to the Note or never installation guide!\n\nMake sure you have installed the [prerequisites](/prerequisites)\n\n## Content\n\n(todo)\n\n## Full installation guide\n\n### Cloning the repository\n\n```bash\ngit clone https://github.com/niekh1234/note-or-never.git\n```\n\nEnter the directory\n\n```bash\n$ cd note-or-never/\n```\n\n### Starting the DB\n\n```bash\n$ cd db/\n```\nChange the `docker-compose.yaml` to your liking.\n\nAn example file could look like this:\n\n```yaml\nversion: '3'\nservices:\n  postgres:\n    image: postgres\n    environment:\n      POSTGRES_DB: postgres\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: my_very_secret_password\n    volumes:\n      - ./data:/var/lib/postgresql/data\n    ports:\n      - '5432:5432'\n```\n\nStart the database\n\n```bash\n$ docker-compose up -d\n```\n\nCheck if everything is working\n\n```bash\n$ docker-compose ps\n\n    Name                  Command             State             Ports           \n--------------------------------------------------------------------------------\ndb_postgres_1   docker-entrypoint.sh          Up      0.0.0.0:5432->5432/tcp,:::\n                postgres                              5432->5432/tcp  \n```\n\n### Get the env file ready\n\n```bash\n$ mv .env.example .env\n```\n\n- Enter the `DATABASE_URL` based on what you entered in the `docker-compose` file in the provided format.\n- Enter a `TOKEN_SECRET` you wanna use, I recommend something long.\n\n<blockquote style=\"border-color: #DC2626;\">Do not use the TOKEN_SECRET provided by the example file! This will allow attackers to decrypt tokens</blockquote>\n\n\n```bash\nDATABASE_URL=\"postgresql://postgres:my_very_secret_password@localhost:5432/mydb?schema=public\"\nTOKEN_SECRET=generate_something_long_here\n```\n\nInstall `npm` packages\n\n```bash\n$ yarn\n```\n\nBuild the `NextJS` project\n\nMake sure there are no  errors.\n\n```bash\n$ yarn build\n```\n\nStart a service using `pm2`\n\n```bash\n$ pm2 start ecosystem.config.js\n```\n\nYou should see something like this:\n\n```bash\n$ pm2 status\n\n| id | name               | mode     | \u21ba    | status    | cpu      | memory   |\n| -- | ------------------ | -------- | ---- | --------- | -------- | -------- |\n| 0  | note-or-never      | fork     | 0    | online    | 0%       | 64.5mb   |\n```\n\n### That is the base installation complete\n\nSo what do we have now?\n\n- A `NextJS` server being served as a service on port **3000** by `pm2`\n\n### Next Steps\n\n[Setting up nginx](/nginx-setup)\n",
      "createdAt": "2022-05-24T18:20:33.534Z",
      "updatedAt": "2022-05-24T18:20:33.534Z",
      "view": "P"
    },
    {
      "id": "roadmap",
      "title": "Roadmap",
      "content": "# Roadmap\n\n## :bangbang: High priority:\n\n- Directories / grouping / labelling. Some way to organize notes into chunks.\n- UX research and improvements.\n\n## :clock10: Low priority\n\n- Serverless setup using Github repositories, where you would be able to login using github and store notes in markdown files on github.\n- Smart markdown parsing.\n- Custom editor.\n",
      "createdAt": "2022-05-24T18:20:32.534Z",
      "updatedAt": "2022-05-24T18:20:32.534Z",
      "view": "P"
    }
  ]
}
